{"ast":null,"code":"// has number\nconst hasNumber = number => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = number => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = number => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = count => {\n  if (count < 2) return {\n    label: 'Poor',\n    color: 'error.main'\n  };\n  if (count < 3) return {\n    label: 'Weak',\n    color: 'warning.main'\n  };\n  if (count < 4) return {\n    label: 'Normal',\n    color: 'warning.dark'\n  };\n  if (count < 5) return {\n    label: 'Good',\n    color: 'success.main'\n  };\n  if (count < 6) return {\n    label: 'Strong',\n    color: 'success.dark'\n  };\n  return {\n    label: 'Poor',\n    color: 'error.main'\n  };\n};\n\n// password strength indicator\nexport const strengthIndicator = number => {\n  let strengths = 0;\n  if (number.length > 5) strengths += 1;\n  if (number.length > 7) strengths += 1;\n  if (hasNumber(number)) strengths += 1;\n  if (hasSpecial(number)) strengths += 1;\n  if (hasMixed(number)) strengths += 1;\n  return strengths;\n};","map":{"version":3,"names":["hasNumber","number","RegExp","test","hasMixed","hasSpecial","strengthColor","count","label","color","strengthIndicator","strengths","length"],"sources":["C:/Users/Noa Farkash/Desktop/evalueme/src/utils/password-strength.js"],"sourcesContent":["// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: 'error.main' };\n    if (count < 3) return { label: 'Weak', color: 'warning.main' };\n    if (count < 4) return { label: 'Normal', color: 'warning.dark' };\n    if (count < 5) return { label: 'Good', color: 'success.main' };\n    if (count < 6) return { label: 'Strong', color: 'success.dark' };\n    return { label: 'Poor', color: 'error.main' };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n    let strengths = 0;\n    if (number.length > 5) strengths += 1;\n    if (number.length > 7) strengths += 1;\n    if (hasNumber(number)) strengths += 1;\n    if (hasSpecial(number)) strengths += 1;\n    if (hasMixed(number)) strengths += 1;\n    return strengths;\n};\n"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAIC,MAAM,IAAK,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAE9D;AACA,MAAMG,QAAQ,GAAIH,MAAM,IAAK,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC,IAAI,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAEjG;AACA,MAAMI,UAAU,GAAIJ,MAAM,IAAK,IAAIC,MAAM,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAE3E;AACA,OAAO,MAAMK,aAAa,GAAIC,KAAK,IAAK;EACpC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAa,CAAC;EAC5D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC9D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAe,CAAC;EAChE,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC9D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAe,CAAC;EAChE,OAAO;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAa,CAAC;AACjD,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAIT,MAAM,IAAK;EACzC,IAAIU,SAAS,GAAG,CAAC;EACjB,IAAIV,MAAM,CAACW,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACrC,IAAIV,MAAM,CAACW,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACrC,IAAIX,SAAS,CAACC,MAAM,CAAC,EAAEU,SAAS,IAAI,CAAC;EACrC,IAAIN,UAAU,CAACJ,MAAM,CAAC,EAAEU,SAAS,IAAI,CAAC;EACtC,IAAIP,QAAQ,CAACH,MAAM,CAAC,EAAEU,SAAS,IAAI,CAAC;EACpC,OAAOA,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"module"}