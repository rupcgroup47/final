{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noa Farkash\\\\Desktop\\\\evalueme\\\\src\\\\pages\\\\dashboard\\\\IncomeAreaChart.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\n// third-party\nimport ReactApexChart from 'react-apexcharts';\n\n// chart options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst areaChartOptions = {\n  chart: {\n    height: 450,\n    type: 'area',\n    toolbar: {\n      show: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2\n  },\n  grid: {\n    strokeDashArray: 0\n  }\n};\n\n// ==============================|| INCOME AREA CHART ||============================== //\n\nconst IncomeAreaChart = _ref => {\n  _s();\n  let {\n    slot\n  } = _ref;\n  const theme = useTheme();\n  const {\n    primary,\n    secondary\n  } = theme.palette.text;\n  const line = theme.palette.divider;\n  const [options, setOptions] = useState(areaChartOptions);\n  useEffect(() => {\n    setOptions(prevState => ({\n      ...prevState,\n      colors: [theme.palette.primary.main, theme.palette.primary[700]],\n      xaxis: {\n        categories: slot === 'month' ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\n          }\n        },\n        axisBorder: {\n          show: true,\n          color: line\n        },\n        tickAmount: slot === 'month' ? 11 : 7\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [secondary]\n          }\n        }\n      },\n      grid: {\n        borderColor: line\n      },\n      tooltip: {\n        theme: 'light'\n      }\n    }));\n  }, [primary, secondary, line, theme, slot]);\n  const [series, setSeries] = useState([{\n    name: 'Page Views',\n    data: [0, 86, 28, 115, 48, 210, 136]\n  }, {\n    name: 'Sessions',\n    data: [0, 43, 14, 56, 24, 105, 68]\n  }]);\n  useEffect(() => {\n    setSeries([{\n      name: 'Page Views',\n      data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\n    }, {\n      name: 'Sessions',\n      data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\n    }]);\n  }, [slot]);\n  return /*#__PURE__*/_jsxDEV(ReactApexChart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    height: 450\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 12\n  }, this);\n};\n_s(IncomeAreaChart, \"Kk6Nyx06NI4MTtbblEUvLB/Dgc4=\", false, function () {\n  return [useTheme];\n});\n_c = IncomeAreaChart;\nIncomeAreaChart.propTypes = {\n  slot: PropTypes.string\n};\nexport default IncomeAreaChart;\nvar _c;\n$RefreshReg$(_c, \"IncomeAreaChart\");","map":{"version":3,"names":["PropTypes","useState","useEffect","useTheme","ReactApexChart","areaChartOptions","chart","height","type","toolbar","show","dataLabels","enabled","stroke","curve","width","grid","strokeDashArray","IncomeAreaChart","slot","theme","primary","secondary","palette","text","line","divider","options","setOptions","prevState","colors","main","xaxis","categories","labels","style","axisBorder","color","tickAmount","yaxis","borderColor","tooltip","series","setSeries","name","data","propTypes","string"],"sources":["C:/Users/Noa Farkash/Desktop/evalueme/src/pages/dashboard/IncomeAreaChart.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\n\n// third-party\nimport ReactApexChart from 'react-apexcharts';\n\n// chart options\nconst areaChartOptions = {\n    chart: {\n        height: 450,\n        type: 'area',\n        toolbar: {\n            show: false\n        }\n    },\n    dataLabels: {\n        enabled: false\n    },\n    stroke: {\n        curve: 'smooth',\n        width: 2\n    },\n    grid: {\n        strokeDashArray: 0\n    }\n};\n\n// ==============================|| INCOME AREA CHART ||============================== //\n\nconst IncomeAreaChart = ({ slot }) => {\n    const theme = useTheme();\n\n    const { primary, secondary } = theme.palette.text;\n    const line = theme.palette.divider;\n\n    const [options, setOptions] = useState(areaChartOptions);\n\n    useEffect(() => {\n        setOptions((prevState) => ({\n            ...prevState,\n            colors: [theme.palette.primary.main, theme.palette.primary[700]],\n            xaxis: {\n                categories:\n                    slot === 'month'\n                        ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n                        : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                labels: {\n                    style: {\n                        colors: [\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary,\n                            secondary\n                        ]\n                    }\n                },\n                axisBorder: {\n                    show: true,\n                    color: line\n                },\n                tickAmount: slot === 'month' ? 11 : 7\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [secondary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: line\n            },\n            tooltip: {\n                theme: 'light'\n            }\n        }));\n    }, [primary, secondary, line, theme, slot]);\n\n    const [series, setSeries] = useState([\n        {\n            name: 'Page Views',\n            data: [0, 86, 28, 115, 48, 210, 136]\n        },\n        {\n            name: 'Sessions',\n            data: [0, 43, 14, 56, 24, 105, 68]\n        }\n    ]);\n\n    useEffect(() => {\n        setSeries([\n            {\n                name: 'Page Views',\n                data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\n            },\n            {\n                name: 'Sessions',\n                data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\n            }\n        ]);\n    }, [slot]);\n\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\n};\n\nIncomeAreaChart.propTypes = {\n    slot: PropTypes.string\n};\n\nexport default IncomeAreaChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}